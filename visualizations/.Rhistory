library(ggplot2)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=hwy)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"))
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets= .~rv)
qplot(displ, hwy, data=mpg, facets= .~drv)
qplot(hwy, data=mpg, facets=drv~.)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
library(caret)
install.packages("caret")
library(caret)
setwd("~/Documents")
setwd("~/Documents/edX/analyticsEdge/visualizations")
who = read.csv('../data/WHO.csv')
str(who)
library(ggplot2)
plot(who$GNI, who$FertilityRate)
scatterplot = ggplot(who, aes(x = GNI, y = FertilityRate))
scatterplot + geom_point
scatterplot + geom_point()
scatterplot + line()
scatterplot + geom_line()
scatterplot + geom_point(color="blue", size=3, shape=17)
scatterplot + geom_point(color="blue", size=3, shape=17) + gg_title('Fertility Rate vs. Gross National Income')
scatterplot + geom_point(color="blue", size=3, shape=17) + ggtitle('Fertility Rate vs. Gross National Income')
source('~/.active-rstudio-document', echo=TRUE)
FertilityGNIPlot = scatterplot + geom_point(color="blue", size=3, shape=17) + ggtitle('Fertility Rate vs. Gross National Income')
pdf("myPlot.pdf")
print(FertilityGNIPlot)
dev.off()
FertilityGNIPlot = scatterplot + geom_point(color="blue", size=3, shape=15) + ggtitle('Fertility Rate vs. Gross National Income')
FertilityGNIPlot = scatterplot + geom_point(color="blue", size=3, shape=15) + ggtitle('Fertility Rate vs. Gross National Income')
FertilityGNIPlot
scatplot2 = ggplot(who, aes(x = GNI, y = FertilityRate, color = Region))
scatplot2 + geom_point(color = 'red', size = 2, shape = 20)
scatplot2 + geom_point(size = 2, shape = 20)
scatplot2 = ggplot(who, aes(x = GNI, y = FertilityRate, color = LifeExpectancy))
scatplot2 + geom_point(size = 2, shape = 20)
ggplot(who, aes(x = GNI, y = Under15)) + geom_point()
ggplot(who, aes(x = FertilityRate, y = Under15)) + geom_point()
ggplot(who, aes(x = log(FertilityRate), y = Under15)) + geom_point()
model = lm(Under15 ~ FertilityRate, data = who)
summary(model)
ggplot(who, aes(x = log(FertilityRate), y = Under15)) + geom_point() + stat_smooth(method = "lm")
ggplot(who, aes(x = log(FertilityRate), y = Under15)) + geom_point() + stat_smooth(method = "lm", level=0.99)#plot 99% confidence interval
ggplot(WHO, aes(x = FertilityRate, y = Under15)) + geom_point()
ggplot(who, aes(x = FertilityRate, y = Under15, color = Region)) + geom_point()
ggplot(who, aes(x = FertilityRate, y = Under15, color = Region)) + geom_point() + scale_color_brewer(palette="Dark2")
mvt = read.csv('..data/mvt.csv', stringsAsFactors = FALSE)
setwd("~/Documents/edX/analyticsEdge/visualizations")
mvt = read.csv('../data/mvt.csv', stringsAsFactors = FALSE)
str(mvt)
mvt$Date = strptime(mvt$Date, format="%m/%d/%y %H:%M")
mvt$Weekday = weekdays(mvt$Date)
mvt$Hour = hour(mvt$Date)
mvt$Hour = mvt$Date$Hour
str(mvt)
mvt$Hour = mvt$Date$hour
str(mvt)
table(mvt$Weekday)
weekdayCounts = as.data.frame(table(mvt$Weekday))
WeekdayCounts = as.data.frame(table(mvt$Weekday))
str(WeekdayCounts)
library(ggplot2)
ggplot(WeekdayCounts, aes(x = Var1, y = Freq)) + geom_line(aes(group=1))
WeekdayCounts$Var1 = factor(WeekdayCounts$Var1, ordered=TRUE, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
WeekdayCounts$Var1 = factor(WeekdayCounts$Var1, ordered=TRUE, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
ggplot(WeekdayCounts, aes(x = Var1, y = Freq)) + geom_line(aes(group=1))
ggplot(WeekdayCounts, aes(x = Var1, y = Freq)) + geom_line(aes(group=1)) + xlab("Day of the Week") + ylab("Total Vehicle Thefts")
ggplot(WeekdayCounts, aes(x = Var1, y = Freq)) + geom_line(aes(group=1), line_type=2) + xlab("Day of the Week") + ylab("Total Vehicle Thefts")
ggplot(WeekdayCounts, aes(x = Var1, y = Freq)) + geom_line(aes(group=1), linetype=2) + xlab("Day of the Week") + ylab("Total Vehicle Thefts")
ggplot(WeekdayCounts, aes(x = Var1, y = Freq)) + geom_line(aes(group=1), alpha=.3) + xlab("Day of the Week") + ylab("Total Vehicle Thefts")
table(mvt$Weekday, mvt$Hour)
DayHourCounts = as.data.frame(table(mvt$Weekday, mvt$Hour))
DarHourCounts$Hour = as.numeric(as.character(DayHourCounts$Var2))
DayHourCounts$Hour = as.numeric(as.character(DayHourCounts$Var2))
ggplot(DayHourCounts, aes(x = Hour, y = Freq)) + geom_line(aes(gruop=Var1))
ggplot(DayHourCounts, aes(x = Hour, y = Freq, colors = Weekday)) + geom_line(aes(gruop=Var1))
ggplot(DayHourCounts, aes(x = Hour, y = Freq, colors = Weekday)) + geom_line(aes(group=Var1))
ggplot(DayHourCounts, aes(x = Hour, y = Freq)) + geom_line(aes(group=Var1, color=Var1))
ggplot(DayHourCounts, aes(x = Hour, y = Freq)) + geom_line(aes(group=Var1, color=Var1, size = 2))
ggplot(DayHourCounts, aes(x = Hour, y = Freq)) + geom_line(aes(group=Var1, color=Var1, size = 2))
DayHourCounts$Var1 = factor(WeekdayCounts$Var1, ordered=TRUE, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
srt(DayHourCounts)
str(DayHourCounts)
DayHourCounts$Var1 = factor(WeekdayCounts$Var1, ordered=TRUE, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
str(DayHourCounts)
ggplot(DayHourCounts, aes(x = Hour, y = Var1)) + geom_tile(aes(fill=Freq))
ggplot(DayHourCounts, aes(x = Hour, y = Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts")
ggplot(DayHourCounts, aes(x = Hour, y = Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts") + theme(axis.title.y = element.blank())
ggplot(DayHourCounts, aes(x = Hour, y = Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts") + theme(axis.title.y = element.blank())
ggplot(DayHourCounts, aes(x = Hour, y = Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts") + theme(axis.title.y = element_blank())
ggplot(DayHourCounts, aes(x = Hour, y = Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts", low="white", high="red") + theme(axis.title.y = element_blank())
